{"name":"ds.oop","tagline":"Allows OOP concepts in javascript including classes, inheritance, multi-inheritance, polymophism, interfaces (code contracts), and enumerators. Several ready to use collections implemented including List, Queue, Stack, Dictionary, and Tree.","body":"##Welcome to the ds.oop wiki!\r\n\r\nThe purpose of the oop library is to make writing and maintaining classes in javascript easier. There are many libraries out there that already do this. Here are a few reasons why ds.oop is better.\r\n\r\n* very lightweight (about 2kb)\r\n* very fast\r\n* supports multiple inheritance.\r\n\r\nIn addition, ds.oop allows you to write **significantly** less code. This translates to faster load times for your js files. The result? Code using ds.oop will load/initalize faster than vanilla javascript in almost all cases not to mention making your code far more readable, maintainable, and modular.\r\n\r\n###Table of Contents\r\n* [Change Log](http://github.com/digital-synapse/ds.oop/wiki/Change-Log)\r\n* [Getting Started](http://github.com/digital-synapse/ds.oop/wiki/Getting-Started)\r\n\r\n###Documentation\r\n* [ds.make.class](http://github.com/digital-synapse/ds.oop/wiki/ds.make.class)\r\n* [ds.make.enum](http://github.com/digital-synapse/ds.oop/wiki/ds.make.enum)\r\n* [ds.make.namespace](http://github.com/digital-synapse/ds.oop/wiki/ds.make.namespace)\r\n* [ds.type](http://github.com/digital-synapse/ds.oop/wiki/ds.type)","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}